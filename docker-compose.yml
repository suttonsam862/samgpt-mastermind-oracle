
version: '3.8'

services:
  tor:
    image: dperson/tor:latest
    container_name: tor
    restart: unless-stopped
    networks:
      - tor_network
    # Expose Tor SOCKS proxy port internally only
    expose:
      - "9050"
    # Configure Tor with healthcheck
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9050"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Apply security controls
    security_opt:
      - apparmor:tor_profile
      - seccomp:/app/configs/seccomp_tor.json
      - no-new-privileges:true
    # Manage capabilities for Tor
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE  # Needed for binding to ports
    read_only: true
    tmpfs:
      - /tmp:size=50M,noexec,nosuid,nodev
      
  vault:
    image: hashicorp/vault:latest
    container_name: vault
    restart: unless-stopped
    networks:
      - services_network
    cap_drop:
      - ALL
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_ROOT_TOKEN:-root}
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    volumes:
      - ./configs/vault:/vault/config
      - vault-data:/vault/file
    command: server -config=/vault/config/vault.hcl
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 5s
      retries: 3
      
  dark-web-ingestion:
    image: darkweb-ingestion:latest
    container_name: darkweb-ingestion
    user: 65532:65532  # nonroot user from distroless image
    depends_on:
      tor:
        condition: service_healthy
      vault:
        condition: service_healthy
    networks:
      - tor_network
      - services_network
    volumes:
      # Mount config and data directories
      - ./data:/app/data:ro,noexec
      - ./logs:/app/logs
      - ./src/utils:/app/src/utils:ro,noexec
      # AppArmor and SELinux policies 
      - ./configs/apparmor:/etc/apparmor.d:ro
      - ./configs/falco:/etc/falco:ro
      # Mount temporary writable directory (when using read-only filesystem)
      - type: tmpfs
        target: /app/tmp
        tmpfs:
          size: 100M
          noexec: true
          nosuid: true
          nodev: true
    env_file:
      - .env
    # Make filesystem read-only except for specific mounts
    read_only: true
    # Configure the container to run the ingestion service
    # Pass any URL file as an argument
    command: ["--file", "/app/data/urls.json"]
    # Limit resources to prevent DoS
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    # Additional security measures
    security_opt:
      - no-new-privileges:true
      - apparmor:ingestion_profile
      - seccomp:/app/configs/seccomp_ingestion.json
    # Drop all capabilities and only add back what's needed
    cap_drop:
      - ALL
    # Network isolation
    dns:
      - 127.0.0.1  # Prevent DNS leaks by forcing local resolution only
    sysctls:
      - net.ipv4.ip_forward=0
      - net.ipv6.conf.all.forwarding=0

networks:
  tor_network:
    driver: bridge
    internal: true  # No direct outside access
    ipam:
      config:
        - subnet: 172.28.0.0/24
    driver_opts:
      com.docker.network.bridge.name: br-tor
      
  services_network:
    driver: bridge
    internal: false  # Needed for vault access
    ipam:
      config:
        - subnet: 172.29.0.0/24
    driver_opts:
      com.docker.network.bridge.name: br-services

volumes:
  vault-data:
    driver: local
